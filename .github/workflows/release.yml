name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.release.outputs.id }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: doksnet
            asset_name: doksnet-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: doksnet.exe
            asset_name: doksnet-windows-amd64.exe
          - os: macOS-latest
            target: x86_64-apple-darwin
            artifact_name: doksnet
            asset_name: doksnet-macos-amd64
          - os: macOS-latest
            target: aarch64-apple-darwin
            artifact_name: doksnet
            asset_name: doksnet-macos-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.target }}-cargo-
          
    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Rename binary
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp ${{ matrix.artifact_name }} ${{ matrix.asset_name }}
        else
          cp ${{ matrix.artifact_name }} ${{ matrix.asset_name }}
        fi
      
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: ./target/${{ matrix.target }}/release/${{ matrix.asset_name }}

  publish-crate:
    name: Publish to crates.io
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
      continue-on-error: true 